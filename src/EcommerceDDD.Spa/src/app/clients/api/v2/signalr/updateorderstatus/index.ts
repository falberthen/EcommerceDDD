/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createProblemDetailsFromDiscriminatorValue, serializeUpdateOrderStatusRequest, type ProblemDetails, type UpdateOrderStatusRequest } from '../../../../models/index';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/v2/signalr/updateorderstatus
 */
export interface UpdateorderstatusRequestBuilder extends BaseRequestBuilder<UpdateorderstatusRequestBuilder> {
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<string>}
     * @throws {ProblemDetails} error when the service returns a 400 status code
     */
     post(body: UpdateOrderStatusRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<string | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: UpdateOrderStatusRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const UpdateorderstatusRequestBuilderUriTemplate = "{+baseurl}/api/v2/signalr/updateorderstatus";
/**
 * Metadata for all the requests in the request builder.
 */
export const UpdateorderstatusRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: UpdateorderstatusRequestBuilderUriTemplate,
        errorMappings: {
            400: createProblemDetailsFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "string",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUpdateOrderStatusRequest,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
