/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createOrderViewModelIListApiResponseFromDiscriminatorValue, createProblemDetailsFromDiscriminatorValue, type OrderViewModelIListApiResponse, type ProblemDetails } from '../../models/index';
// @ts-ignore
import { type WithOrderItemRequestBuilder, WithOrderItemRequestBuilderNavigationMetadata } from './item/index';
// @ts-ignore
import { QuoteRequestBuilderNavigationMetadata, type QuoteRequestBuilder } from './quote/index';
// @ts-ignore
import { type BaseRequestBuilder, type Guid, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/orders
 */
export interface OrdersRequestBuilder extends BaseRequestBuilder<OrdersRequestBuilder> {
    /**
     * The quote property
     */
    get quote(): QuoteRequestBuilder;
    /**
     * Gets an item from the ApiSdk.api.orders.item collection
     * @param orderId Unique identifier of the item
     * @returns {WithOrderItemRequestBuilder}
     */
     byOrderId(orderId: Guid) : WithOrderItemRequestBuilder;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OrderViewModelIListApiResponse>}
     * @throws {ProblemDetails} error when the service returns a 400 status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OrderViewModelIListApiResponse | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const OrdersRequestBuilderUriTemplate = "{+baseurl}/api/orders";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OrdersRequestBuilderNavigationMetadata: Record<Exclude<keyof OrdersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byOrderId: {
        navigationMetadata: WithOrderItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["orderId"],
    },
    quote: {
        navigationMetadata: QuoteRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OrdersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: OrdersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json, text/plain;q=0.9",
        errorMappings: {
            400: createProblemDetailsFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOrderViewModelIListApiResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
