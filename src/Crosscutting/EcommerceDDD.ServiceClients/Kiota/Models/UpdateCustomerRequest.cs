// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace EcommerceDDD.ServiceClients.ApiGateway.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UpdateCustomerRequest : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The creditLimit property</summary>
        public double? CreditLimit { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The shippingAddress property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ShippingAddress { get; set; }
#nullable restore
#else
        public string ShippingAddress { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::EcommerceDDD.ServiceClients.ApiGateway.Models.UpdateCustomerRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::EcommerceDDD.ServiceClients.ApiGateway.Models.UpdateCustomerRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::EcommerceDDD.ServiceClients.ApiGateway.Models.UpdateCustomerRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "creditLimit", n => { CreditLimit = n.GetDoubleValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "shippingAddress", n => { ShippingAddress = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDoubleValue("creditLimit", CreditLimit);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("shippingAddress", ShippingAddress);
        }
    }
}
#pragma warning restore CS0618
