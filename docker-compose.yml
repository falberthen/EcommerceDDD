version: '3.7'

# Services
services:
  ecommerceddd-apigateway:
    image: ${DOCKER_REGISTRY-}ecommerceddd-apigateway
    container_name: ecommerceddd-apigateway
    build:
      context: .
      dockerfile: src/Crosscutting/EcommerceDDD.ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    restart: on-failure    
    ports:
      - '5000:80'
    networks:
      - ecommercedddnet

  ecommerceddd-identityserver:
    image: ${DOCKER_REGISTRY-}ecommerceddd-identityserver
    container_name: ecommerceddd-identityserver
    build:
      context: .
      dockerfile: src/Crosscutting/EcommerceDDD.IdentityServer/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      #- ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_URLS=http://+:80
    restart: on-failure    
    ports:
      #- '5001:443'
      - '5001:80'
    networks:
      - ecommercedddnet

  ecommerceddd-customers:
    image: ${DOCKER_REGISTRY-}ecommerceddd-customers
    container_name: ecommerceddd-customers
    build:
      context: .
      dockerfile: src/Services/EcommerceDDD.Customers/Dockerfile
    environment:                      
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    restart: on-failure    
    ports:
      - '8001:80'
    networks:
      - ecommercedddnet
    depends_on:
      - postgres

  ecommerceddd-products:
    image: ${DOCKER_REGISTRY-}ecommerceddd-products
    container_name: ecommerceddd-products
    build:
      context: .
      dockerfile: src/Services/EcommerceDDD.Products/Dockerfile
    environment:                      
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    restart: on-failure    
    ports:
      - '8002:80'
    networks:
    - ecommercedddnet
    depends_on:
      - postgres

  ecommerceddd-quotes:
    image: ${DOCKER_REGISTRY-}ecommerceddd-quotes
    container_name: ecommerceddd-quotes
    build:
      context: .
      dockerfile: src/Services/EcommerceDDD.Quotes/Dockerfile
    environment:                      
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    restart: on-failure    
    ports:
      - '8003:80'
    networks:
      - ecommercedddnet
    depends_on:
      - postgres

  ecommerceddd-orders:
    image: ${DOCKER_REGISTRY-}ecommerceddd-orders
    container_name: ecommerceddd-orders
    build:
      context: .
      dockerfile: src/Services/EcommerceDDD.Orders/Dockerfile
    environment:                      
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    restart: on-failure    
    ports:
      - '8004:80'
    networks:
      - ecommercedddnet
    depends_on:
      - postgres

  ecommerceddd-payments:
    image: ${DOCKER_REGISTRY-}ecommerceddd-payments
    container_name: ecommerceddd-payments
    build:
      context: .
      dockerfile: src/Services/EcommerceDDD.Payments/Dockerfile
    environment:                      
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    restart: on-failure    
    ports:
      - '8005:80'
    networks:
      - ecommercedddnet
    depends_on:
      - postgres

  ecommerceddd-shipments:
    image: ${DOCKER_REGISTRY-}ecommerceddd-shipments
    container_name: ecommerceddd-shipments
    build:
      context: .
      dockerfile: src/Services/EcommerceDDD.Shipments/Dockerfile
    environment:                      
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80    
    restart: on-failure
    ports:
      - '8006:80'
    networks:
      - ecommercedddnet
    depends_on:
      - postgres

  # Postgresql
  postgres:
    image: clkao/postgres-plv8
    container_name: postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=P@55w0rd
    restart: on-failure
    ports:
      - "5432:5432"
    networks:
      - ecommercedddnet
    volumes:
        - ./scripts/db_init.sql:/docker-entrypoint-initdb.d/db_init.sql

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmintest@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-@dm1n}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - ecommercedddnet

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - ecommercedddnet
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: kafka    
    networks:
      - ecommercedddnet
    restart: on-failure
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOSTNAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092      
      ADVERTISED_HOST_NAME: kafka
    depends_on:
      - zookeeper

  init-kafka:
    image: confluentinc/cp-kafka:7.0.1    
    entrypoint: [ '/bin/sh', '-c' ]
    networks:
      - ecommercedddnet
    command: |
        "
        kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic Payments --replication-factor 1 --partitions 1
        kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic Shipments --replication-factor 1 --partitions 1
        "
    restart: on-failure
    depends_on:
      - kafka

  kafka_topics_ui:
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    ports:
      - "8080:8080"
    environment:
        KAFKA_CLUSTERS_0_NAME: local
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    networks:
      - ecommercedddnet
    depends_on:
      - kafka

networks:
  ecommercedddnet:
    driver: bridge

volumes:
  postgres:
  pgadmin:
